dojo=# EXPLAIN ANALYZE SELECT dep_id, nome, salario
FROM empregados
WHERE (dep_id,salario)
IN (SELECT dep_id, MAX(salario)
FROM empregados
GROUP BY dep_id);
                                                              QUERY PLAN
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3.62..6.14 rows=2 width=15) (actual time=10.791..10.841 rows=32 loops=1)
   Hash Cond: ((empregados.dep_id = empregados_1.dep_id) AND (empregados.salario = (max(empregados_1.salario))))
   ->  Seq Scan on empregados  (cost=0.00..2.00 rows=100 width=15) (actual time=10.630..10.643 rows=100 loops=1)
   ->  Hash  (cost=3.14..3.14 rows=32 width=8) (actual time=0.123..0.124 rows=32 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 10kB
         ->  HashAggregate  (cost=2.50..2.82 rows=32 width=8) (actual time=0.101..0.109 rows=32 loops=1)
               Group Key: empregados_1.dep_id
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on empregados empregados_1  (cost=0.00..2.00 rows=100 width=8) (actual time=0.009..0.023 rows=100 loops=1)
 Planning Time: 61.952 ms
 Execution Time: 11.059 ms
(11 rows)

dojo=# EXPLAIN ANALYZE SELECT dep_id, nome, salario
FROM empregados
WHERE (dep_id,salario)
IN (SELECT dep_id, MAX(salario)
FROM empregados
GROUP BY dep_id);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3.62..6.14 rows=2 width=15) (actual time=0.142..0.207 rows=32 loops=1)
   Hash Cond: ((empregados.dep_id = empregados_1.dep_id) AND (empregados.salario = (max(empregados_1.salario))))
   ->  Seq Scan on empregados  (cost=0.00..2.00 rows=100 width=15) (actual time=0.014..0.030 rows=100 loops=1)
   ->  Hash  (cost=3.14..3.14 rows=32 width=8) (actual time=0.112..0.113 rows=32 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 10kB
         ->  HashAggregate  (cost=2.50..2.82 rows=32 width=8) (actual time=0.088..0.097 rows=32 loops=1)
               Group Key: empregados_1.dep_id
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on empregados empregados_1  (cost=0.00..2.00 rows=100 width=8) (actual time=0.005..0.020 rows=100 loops=1)
 Planning Time: 0.171 ms
 Execution Time: 0.266 ms
(11 rows)

dojo=# EXPLAIN ANALYZE SELECT dep_id, nome, salario
FROM empregados
WHERE (dep_id,salario)
IN (SELECT dep_id, MAX(salario)
FROM empregados
GROUP BY dep_id);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3.62..6.14 rows=2 width=15) (actual time=0.063..0.086 rows=32 loops=1)
   Hash Cond: ((empregados.dep_id = empregados_1.dep_id) AND (empregados.salario = (max(empregados_1.salario))))
   ->  Seq Scan on empregados  (cost=0.00..2.00 rows=100 width=15) (actual time=0.008..0.014 rows=100 loops=1)
   ->  Hash  (cost=3.14..3.14 rows=32 width=8) (actual time=0.049..0.050 rows=32 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 10kB
         ->  HashAggregate  (cost=2.50..2.82 rows=32 width=8) (actual time=0.038..0.043 rows=32 loops=1)
               Group Key: empregados_1.dep_id
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on empregados empregados_1  (cost=0.00..2.00 rows=100 width=8) (actual time=0.003..0.009 rows=100 loops=1)
 Planning Time: 0.151 ms
 Execution Time: 0.116 ms
(11 rows)

dojo=# EXPLAIN ANALYZE SELECT dep_id, nome, salario
FROM empregados
WHERE (dep_id,salario)
IN (SELECT dep_id, MAX(salario)
FROM empregados
GROUP BY dep_id);
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3.62..6.14 rows=2 width=15) (actual time=0.060..0.084 rows=32 loops=1)
   Hash Cond: ((empregados.dep_id = empregados_1.dep_id) AND (empregados.salario = (max(empregados_1.salario))))
   ->  Seq Scan on empregados  (cost=0.00..2.00 rows=100 width=15) (actual time=0.007..0.013 rows=100 loops=1)
   ->  Hash  (cost=3.14..3.14 rows=32 width=8) (actual time=0.048..0.049 rows=32 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 10kB
         ->  HashAggregate  (cost=2.50..2.82 rows=32 width=8) (actual time=0.037..0.042 rows=32 loops=1)
               Group Key: empregados_1.dep_id
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on empregados empregados_1  (cost=0.00..2.00 rows=100 width=8) (actual time=0.003..0.009 rows=100 loops=1)
 Planning Time: 0.104 ms
 Execution Time: 0.111 ms
(11 rows)

dojo=# EXPLAIN ANALYZE SELECT dep_id, nome, salario
FROM empregados
WHERE (dep_id,salario)
IN (SELECT dep_id, MAX(salario)
FROM empregados
GROUP BY dep_id);
                                                              QUERY PLAN
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3.62..6.14 rows=2 width=15) (actual time=0.061..0.084 rows=32 loops=1)
   Hash Cond: ((empregados.dep_id = empregados_1.dep_id) AND (empregados.salario = (max(empregados_1.salario))))
   ->  Seq Scan on empregados  (cost=0.00..2.00 rows=100 width=15) (actual time=0.007..0.013 rows=100 loops=1)
   ->  Hash  (cost=3.14..3.14 rows=32 width=8) (actual time=0.048..0.049 rows=32 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 10kB
         ->  HashAggregate  (cost=2.50..2.82 rows=32 width=8) (actual time=0.037..0.042 rows=32 loops=1)
               Group Key: empregados_1.dep_id
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on empregados empregados_1  (cost=0.00..2.00 rows=100 width=8) (actual time=0.003..0.009 rows=100 loops=1)
 Planning Time: 0.104 ms
 Execution Time: 0.110 ms
(11 rows)

